#include <bits/stdc++.h>
using namespace std;

int main() {
    // set up the distance maps for the 3 keyboard layouts
    // qwerty 2hands
    map<char, double> q2;
    // first row
    q2['`'] = 4.472135955;
    q2['1'] = 4;
    q2['2'] = 4;
    q2['3'] = 4;
    q2['4'] = 4;
    q2['5'] = 4.472135955;
    q2['6'] = 4.472135955;
    q2['7'] = 4;
    q2['8'] = 4;
    q2['9'] = 4;
    q2['0'] = 4;
    q2['-'] = 4.472135955;
    q2['='] = 5.656854249;

    q2['~'] = 4.472135955;
    q2['!'] = 4;
    q2['@'] = 4;
    q2['#'] = 4;
    q2['$'] = 4;
    q2['%'] = 4.472135955;
    q2['^'] = 4.472135955;
    q2['&'] = 4;
    q2['*'] = 4;
    q2['('] = 4;
    q2[')'] = 4;
    q2['_'] = 4.472135955;
    q2['+'] = 5.656854249;
    // second row
    q2['q'] = 2;
    q2['w'] = 2;
    q2['e'] = 2;
    q2['r'] = 2;
    q2['t'] = 2.828427125;
    q2['y'] = 2.828427125;
    q2['u'] = 2;
    q2['i'] = 2;
    q2['o'] = 2;
    q2['p'] = 2;
    q2['['] = 2.828427125;
    q2[']'] = 4.472135955;
    q2['\\'] = 6.32455532;

    q2['{'] = 2.828427125;
    q2['}'] = 4.472135955;
    q2['|'] = 6.32455532;
    // third row
    q2['a'] = 0;
    q2['s'] = 0;
    q2['d'] = 0;
    q2['f'] = 0;
    q2['g'] = 2;
    q2['h'] = 2;
    q2['j'] = 0;
    q2['k'] = 0;
    q2['l'] = 0;
    q2[';'] = 0;
    q2['\''] = 2;

    q2[':'] = 0;
    q2['\"'] = 2;
    // fourth row
    q2['z'] = 2;
    q2['x'] = 2;
    q2['c'] = 2;
    q2['v'] = 2;
    q2['b'] = 2.828427125;
    q2['n'] = 2.828427125;
    q2['m'] = 2;
    q2[','] = 2;
    q2['.'] = 2;
    q2['/'] = 2;

    q2['<'] = 2;
    q2['>'] = 2;
    q2['?'] = 2;
    // querty 1hand
    map<char, double> q1;
    // first row
    q1['`'] = 8.94427191;
    q1['1'] = 7.211102551;
    q1['2'] = 5.656854249;
    q1['3'] = 4.472135955;
    q1['4'] = 4;
    q1['5'] = 4;
    q1['6'] = 4;
    q1['7'] = 4;
    q1['8'] = 4.472135955;
    q1['9'] = 5.656854249;
    q1['0'] = 7.211102551;
    q1['-'] = 8.94427191;
    q1['='] = 10.77032961;

    q1['~'] = 8.94427191;
    q1['!'] = 7.211102551;
    q1['@'] = 5.656854249;
    q1['#'] = 4.472135955;
    q1['$'] = 4;
    q1['%'] = 4;
    q1['^'] = 4;
    q1['&'] = 4;
    q1['*'] = 4.472135955;
    q1['('] = 5.656854249;
    q1[')'] = 7.211102551;
    q1['_'] = 8.94427191;
    q1['+'] = 10.77032961;
    // second row
    q1['q'] = 6.32455532;
    q1['w'] = 4.472135955;
    q1['e'] = 2.828427125;
    q1['r'] = 2;
    q1['t'] = 2;
    q1['y'] = 2;
    q1['u'] = 2;
    q1['i'] = 2.828427125;
    q1['o'] = 4.472135955;
    q1['p'] = 6.32455532;
    q1['['] = 8.246211251;
    q1[']'] = 10.19803903;
    q1['\\'] = 12.16552506;
    q1['{'] = 8.246211251;
    q1['}'] = 10.19803903;
    q1['|'] = 12.16552506;
    // third row
    q1['a'] = 6;
    q1['s'] = 4;
    q1['d'] = 2;
    q1['f'] = 0;
    q1['g'] = 0;
    q1['h'] = 0;
    q1['j'] = 0;
    q1['k'] = 2;
    q1['l'] = 4;
    q1[';'] = 6;
    q1['\''] = 8;

    q1[':'] = 6;
    q1['\"'] = 8;
    // fourth row
    q1['z'] = 6.32455532;
    q1['x'] = 4.472135955;
    q1['c'] = 2.828427125;
    q1['v'] = 2;
    q1['b'] = 2;
    q1['n'] = 2;
    q1['m'] = 2;
    q1[','] = 2.828427125;
    q1['.'] = 4.472135955;
    q1['/'] = 6.32455532;

    q1['<'] = 2.828427125;
    q1['>'] = 4.472135955;
    q1['?'] = 6.32455532;
    // dvorak
    map<char, double> dv;
    // first row
    dv['~'] = 10.77032961;
    dv['!'] = 8.94427191;
    dv['@'] = 7.211102551;
    dv['#'] = 5.656854249;

    dv['`'] = 10.77032961;
    dv['1'] = 8.94427191;
    dv['2'] = 7.211102551;
    dv['3'] = 5.656854249;
    dv['q'] = 4.472135955;
    dv['j'] = 4;
    dv['l'] = 4;
    dv['m'] = 4;
    dv['f'] = 4;
    dv['p'] = 4.472135955;
    dv['/'] = 5.656854249;
    dv['['] = 7.211102551;
    dv[']'] = 8.94427191;

    dv['?'] = 5.656854249;
    dv['{'] = 7.211102551;
    dv['}'] = 8.94427191;
    // second row
    dv['$'] = 8.246211251;
    dv['%'] = 6.32455532;
    dv['^'] = 4.472135955;
    dv['>'] = 2.828427125;

    dv['4'] = 8.246211251;
    dv['5'] = 6.32455532;
    dv['6'] = 4.472135955;
    dv['.'] = 2.828427125;
    dv['o'] = 2;
    dv['r'] = 2;
    dv['s'] = 2;
    dv['u'] = 2;
    dv['y'] = 2.828427125;
    dv['b'] = 4.472135955;
    dv[';'] = 6.32455532;
    dv['='] = 8.246211251;
    dv['\\'] = 10.19803903;

    dv[':'] = 6.32455532;
    dv['+'] = 8.246211251;
    dv['|'] = 10.19803903;
    // third row
    dv['&'] = 8;
    dv['*'] = 6;
    dv['('] = 4;
    dv['7'] = 8;
    dv['8'] = 6;
    dv['9'] = 4;
    dv['a'] = 2;
    dv['e'] = 0;
    dv['h'] = 0;
    dv['t'] = 0;
    dv['d'] = 0;
    dv['c'] = 2;
    dv['k'] = 4;
    dv['-'] = 6;
    dv['_'] = 6;
    // fourth row
    dv[')'] = 8.246211251;
    dv['0'] = 8.246211251;
    dv['z'] = 6.32455532;
    dv['x'] = 4.472135955;
    dv[','] = 2.828427125;
    dv['<'] = 2.828427125;
    dv['i'] = 2;
    dv['n'] = 2;
    dv['w'] = 2;
    dv['v'] = 2;
    dv['g'] = 2.828427125;
    dv['\''] = 4.472135955;
    dv['\"'] = 4.472135955;
    // read the inputs
    while (true) {
        string l;
        getline(cin, l);
        if (cin.eof()) {
            return 0;
        }
        // get the results
        double a = 0.00, b = 0.00, c = 0.00;
        for (int i = 0; i < l.size(); ++i) {
            char cc = isalpha(l[i]) ? tolower(l[i]) : l[i];
            if (q2.find(cc) == q2.end()) {
                continue;
            }
            a += q2[cc];
            b += q1[cc];
            c += dv[cc];
        }
        cout << fixed << setprecision(2) << a << " " << b << " " << c << endl;
    }
    return 0;
}
